#!/bin/bash
source ./settings/settings.conf
source $funcdir/helper_functions
# echo $model $port $basedir $midi_device
source $basedir/midi/reader &
# Connect to the transceiver
rigctld -m $model -t $port &
# rigctld -m $model -r $device_path -t $port &
declare -A menu_options
declare -A menu_numbers

clear
echo -e "Hello DO9RE.\n
Use 0 to return from a menu."
cd $menudir

# Function for Reading Folder Scripts and building Menu 
function show_menu {
# Resetting the menu arrays with every new menu to display
  unset menu_options
  unset menu_numbers
# Display the Menu Name from its name file
  cat $(pwd)/name
# Walk through the menu folder and build the menu from line 2 and 3 of each file
  for file in *; do
    if [[ -f $file && ! $file == "name" ]]; then
      menu_number=$(sed -n '2p' "$file" | sed 's/#//')
      menu_name=$(sed -n '3p' "$file" | sed 's/#//')
      menu_numbers["$menu_number"]="$menu_name"
#     echo "$menu_number: $menu_name"
      menu_options["$menu_number"]="$file"
    fi
  done

# Sort the Array menu_numbers with the corresponding names to display it in ascending order
  for key in $(printf "%s\n" "${!menu_numbers[@]}" | sort -n); do
    echo "$key: ${menu_numbers[$key]}"
  done

}

while true; do
  show_menu
  read -p 'and now?: ' selection
  if [[ $selection -eq "0" ]]; then
    if [[ $(pwd) == "$menudir" ]]; then
      echo "Already at top level."
    elif [[ $(pwd) == "$basedir/menus/options" ]]; then
      cd $menudir
    else
      cd ..
    fi
  elif [[ ${menu_options[$selection]} ]]; then
    source ${menu_options[$selection]}
  else
    echo "Not a valid option"
  fi
done

