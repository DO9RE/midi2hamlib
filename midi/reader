#!/bin/bash
# extract midi ports from settings array into comma separated list, so ASEQDUMP can handle multiple devices
ports=$(IFS=,; echo "${midi_ports[*]}")
# Read Midi mapping from file into memory
midi_mapping=$(cat $midi_mapping_file)
echo $midi_mapping
stdbuf -oL aseqdump -p $ports | while read -r line; do
# Clean values:
source=""
type=""
note=""
controller=""
velocity=""
channel=""
value=""
device=""

# Remove commas from the record
  line=$(echo $line | sed 's/,//g')
  if [[ $line == *"note"* || $line == *"Control change"* || $line == *"Pitch bend"* ]]; then
#   Extract data into variables
    source=$(echo $line | awk '{print $1}')
# Translate the changing port definition into a persistent value, according the settings file
    for i in "${!midi_ports[@]}"; do
      if [[ "${midi_ports[$i]}" == "$source" ]]; then
        device=$i
        break
      fi
    done

    type=$(echo $line | awk '{print $2}')
    channel=$(echo $line | awk '{print $4}')
    if [[ $type == "Control" ]]; then
      controller=$(echo $line | awk '{print $6}')
      value=$(echo $line | awk '{print $8}')
    fi
    if [[ $type == "Note" ]]; then
      on_off=$(echo $line | awk '{print $3}')
      note=$(echo $line | awk '{print $6}')
      velocity=$(echo $line | awk '{print $8}')
    fi
  fi
# Search MIDI map for the event definition
  if [[ $type == "Note" && $on_off == "on" ]]; then
    source $funcdir/$(echo "$midi_mapping" | awk -v device=$device -v note=$note '$1 == device && $4 == note && $2 == "note_on" {print $6}')
  elif [[ $type == "Note" && $on_off == "off" ]]; then
    source $funcdir/$(echo "$midi_mapping" |  awk -v device=$device -v note=$note '$1 == device && $4 == note && $2 == "note_off" {print $6}')
  elif [[ $type == "Control" ]]; then
    source $funcdir/$(echo "$midi_mapping" | awk -v device=$device -v controller=$controller '$1 == device && $4 == controller {print $6}') $value
  fi
done
